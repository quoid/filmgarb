{{- $pctx := . -}}
{{- if .IsHome -}}{{ $pctx = .Site }}{{- end -}}
{{- $pages := slice -}}
{{- if or $.IsHome $.IsSection -}}
    {{- $pages = $pctx.RegularPages -}}
{{- else -}}
    {{- $pages = $pctx.Pages -}}
{{- end -}}
{{- $limit := .Site.Config.Services.RSS.Limit -}}
{{- if ge $limit 1 -}}
    {{- $pages = $pages | first $limit -}}
{{- end -}}
{{- $iso8601 := "2006-01-02T15:04:05-07:00" -}}
{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>{{ .Site.Title }}</title>
        <link>{{ .Permalink }}</link>
        <image>
            <url>{{ printf "%s%s%s" .Permalink "img/" .Site.Params.image }}</url>
            <title>{{ .Site.Title }}</title>
            <link>{{ .Permalink }}</link>
        </image>
        <description>Recent content on {{ .Site.Title }}</description>
        <generator>Hugo -- gohugo.io</generator>{{ with .Site.LanguageCode }}
        <language>{{.}}</language>{{end}}{{ with .Site.Author.email }}
        <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>{{end}}{{ with .Site.Author.email }}
        <webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>{{end}}{{ with .Site.Copyright }}
        <copyright>{{.}}</copyright>{{end}}{{ if not .Date.IsZero }}
        <lastBuildDate>{{ dateFormat $iso8601 .Date.UTC | safeHTML }}</lastBuildDate>{{ end }}
        {{- with .OutputFormats.Get "RSS" -}}
        {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
        {{- end -}}
        {{ range $pages }}
        <item>
            <title>{{ .Title }}</title>
            <link>{{ .Permalink }}</link>
            <pubDate>{{ dateFormat $iso8601 .Date.UTC | safeHTML }}</pubDate>
            {{ with .Site.Author.email }}<author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</author>{{end}}
            <guid>{{ .Permalink }}</guid>
            <description>{{- if and (.IsPage) (eq .Type "items") -}}
                {{- $imagePath := partial "img" (dict "context" . "type" "share") | urlize -}}
                {{- $imagePath = print $imagePath ".*" -}}
                {{- $imageResource := (.Site.GetPage "section" "uploads").Resources.GetMatch $imagePath -}}
                {{- if ne $imageResource nil -}}
                    {{- printf "<img src=\"%s\"/>" $imageResource.Permalink -}}
                {{- end -}}
                {{- end -}}
            {{- .Content | html -}}</description>
        </item>
        {{ end }}
    </channel>
</rss>
